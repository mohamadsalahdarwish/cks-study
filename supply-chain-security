# 🛡️ CKS Supply Chain Security Reference Guide

This guide summarizes the key tools, commands, and concepts required to master **Supply Chain Security** for the Certified Kubernetes Security Specialist (CKS) exam.

---

## 📦 1. SBOM (Software Bill of Materials)

### ✅ What to Review:

* Purpose of SBOM (identify and inventory components in images/code).
* Understand SPDX vs CycloneDX formats.
* Common tools: **Syft**, **Trivy**, **Grype**.

### 🔧 Key Commands

#### ➤ Install Syft

```bash
curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh
```

#### ➤ Generate SBOM (SPDX format)

```bash
syft docker.io/kodekloud/webapp-color:latest -o spdx > /root/webapp-spdx.sbom
```

#### ➤ Generate SBOM (CycloneDX format)

```bash
syft docker.io/kodekloud/webapp-color:latest -o cyclonedx-json > /root/webapp-sbom.json
```

#### ➤ From source code

```bash
syft /path/to/source/code -o spdx-json
```

---

## 🔍 2. Vulnerability Scanning

### ✅ What to Review:

* Scanning SBOM files and images.
* Filtering based on severity and CVEs.

### 🔧 Tools: **Grype**, **Trivy**

#### ➤ Install Grype

```bash
curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh
```

#### ➤ Scan SBOM

```bash
grype sbom:/root/webapp-sbom.json -o json > /root/grype-report.json
```

#### ➤ Extract Critical CVEs

```bash
jq -r '[.matches[] | select(.vulnerability.severity == "Critical")] | length' /root/grype-report.json
cat grype-report.json | jq -e '.matches[] | select(.vulnerability.id == "CVE-2022-48174")'
```

#### ➤ Scan image directly with Trivy

```bash
trivy image nginx:1.18.0
trivy image httpd
trivy image httpd:alpine
trivy image --severity CRITICAL nginx:1.18.0
trivy image --severity CRITICAL,HIGH nginx:1.18.0
trivy image --ignore-unfixed nginx:1.18.0
```

#### ➤ Save and scan image

```bash
docker save nginx:1.18.0 > nginx.tar
trivy image --input nginx.tar
```

---

## 📂 3. SBOM Lifecycle

### ✅ What to Review:

* SBOM flow: generate → store → scan → analyze → remediate → monitor.
* Artifact repositories: JFrog, Nexus, GitHub Packages.

---

## 🧾 4. KubeLinter - Lint Kubernetes Manifests

### ✅ What to Review:

* Enforce manifest best practices.
* Run in CI (Jenkins or GitHub Actions).

### 🔧 Install and Run:

```bash
curl -Lo kube-linter.tar.gz https://github.com/stackrox/kube-linter/releases/download/0.2.3/kube-linter-linux-amd64.tar.gz
tar -xzf kube-linter.tar.gz
sudo mv kube-linter /usr/local/bin/
kube-linter lint .
kube-linter lint nginx.yml > /root/analyze
```

#### Jenkins Integration:

```groovy
sh 'curl -sSfL https://raw.githubusercontent.com/stackrox/kube-linter/main/scripts/install.sh | sh'
sh 'kube-linter lint .'
```

---

## 🧠 5. KubeSec

### ✅ What to Review:

* Security scoring for Kubernetes manifests.
* Use offline binary or remote API.

### 🔧 Commands:

```bash
curl -sSX POST --data-binary @"pod.yaml" https://v2.kubesec.io/scan
wget https://github.com/controlplaneio/kubesec/releases/download/v2.13.0/kubesec_linux_amd64.tar.gz
tar -xvf kubesec_linux_amd64.tar.gz
mv kubesec /usr/bin/

kubesec scan pod.yaml
kubesec http 8080 &
```

---

## 🧩 6. Admission Controllers (Image Policy)

### ✅ What to Review:

* Purpose of `ImagePolicyWebhook`
* Configuration via:

```bash
--enable-admission-plugins=ImagePolicyWebhook
--admission-control-config-file=/etc/kubernetes/admission-config.yaml
```

---

## 📦 7. Trivy Installation and Use Cases

### ✅ What to Review:

* Installing Trivy on Ubuntu/Debian.
* Scanning images, file systems, and SBOMs.

### 🔧 Commands:

```bash
sudo apt-get install wget apt-transport-https gnupg lsb-release
wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
sudo apt-get update
sudo apt-get install trivy
```

#### ➤ Use Cases

```bash
trivy image nginx:1.18.0
trivy image --severity HIGH --output /root/python.txt public.ecr.aws/docker/library/python:3.9-bullseye
trivy image --output /root/python_12.txt public.ecr.aws/docker/library/python:3.12.4
trivy image --input alpine.tar --format json --output /root/alpine.json
trivy -v
```

---

## ✅ Final Checklist Before the Exam

* [x] Generate SBOMs using Syft
* [x] Scan SBOMs using Grype
* [x] Perform image scans with Trivy
* [x] Use KubeLinter for YAML manifest auditing
* [x] Use KubeSec for manifest scoring
* [x] Understand SBOM lifecycle
* [x] Understand Admission Controller (ImagePolicyWebhook)

---

Review these tools and steps in a lab setup to be fully ready for the CKS exam.
